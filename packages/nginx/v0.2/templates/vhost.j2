{% if task is defined and task.nginx is defined and task.nginx.vhost_add is defined %}
    {% set item = task.nginx.vhost_add | default({}) %}
{% else %}
    {% set item = item | default({}) %}
{% endif %}

{% set vhost_id = item.domain | default('_') %}
{% set vhost_id = item.id | default(vhost_id) %}
{% set value = item | default({}) %}

{% set nginx = nginx | default({}) %}
{% set http = nginx.http | default({}) %}
{% set ssl = value.ssl | default(False) %}
{% set port = value.port | default(False) %}

{% set indexes = value.indexes | default('') %}

{# optional upstreams parameter #}
{% if value.upstreams is defined %}
{% for upstream in value.upstreams %}
upstream {{ upstream.name }} {
    {% for backend in upstream.backends %}
    server {{ backend }};
    {% endfor %}
}
{% endfor %}
{% endif %}

server {
    listen   {% if value.port is defined %}{{ value.port }}{% else %}{% if ssl %}443{% else %}80{% endif %}{% if ssl %} ssl{% endif %}{% endif %};
    root /var/www/{{ vhost_id }}/{{ value.webroot | default('') }};

    {% if ssl %}
    ssl_certificate {% if ssl.certificate %}{{ ssl.certificate }}{% else %}/etc/nginx/ssl/{{ vhost_id }}.pem{% endif %};
    ssl_certificate_key {% if ssl.private_key %}{{ ssl.private_key }}{% else %}/etc/nginx/ssl/{{ vhost_id }}.key{% endif %};
    {% endif %}

    {# Need better index management #}
    index {{ indexes }} index.html index.htm;

    access_log {{ http.access_log | dirname }}/{{ vhost_id }}-access.log;
    error_log {{ http.error_log | dirname }}/{{ vhost_id }}-error.log;

    # Make site accessible from http://localhost/
    # server_name _;
    server_name {{ value.domain | default('_') }} {% if value.aliases is defined %}{% if value.aliases is sequence and value.aliases is not string %}{{ value.aliases | join(' ') }}{% else %}{{ value.aliases }}{% endif %}{% endif %};

{% for route in value.routes %}
    location {{ route.uri }} {
{% set type = route.type | default('custom') %}
{% if type == 'proxy' %}
        # Route type: proxy
        proxy_pass {{ route.to }};
        proxy_pass_header Set-Cookie;
{% elif type == 'fastcgi' %}
        # Route type: fastcgi
        fastcgi_pass {{ route.to }};
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        {# We may want to remove index.php #}
        fastcgi_index index.php; 
        include fastcgi_params;
{% elif type == 'websocket' %}
        # Route type: websocket
        proxy_pass {{ route.to }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
{% elif type == 'uwsgi' %}
        # Route type: uwsgi
        uwsgi_pass {{ route.to }};
        include uwsgi_params;
{% elif type == 'static' %}
        # Route type: static
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ /index.html;
        try_files $uri $uri/ {% if index.php in indexes %}/index.php?$args{% endif %};

    {% if route.to is defined %}
        {# TODO: more checks to define if we want to use `alias` or `root` #}
        {% if route.static is defined %}{{ route.static }}{% else %}root{% endif %} {{ route.to }};
    {% endif %}
{% elif type == 'custom' %}
        # Route type: custom
{% else %}
        # Route type: unknown
{% endif %}
{% if route.custom is defined %}
        {{ route.custom }}
{% endif %}
    }
{% endfor %}
}