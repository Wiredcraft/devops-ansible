---
- name: Ensure mysql databases
  mysql_db:
    name={{ item.key }}
    state=present
  with_dict:
    mysql.databases | default({})

# - name: Ensure user's grants to the databases
#   mysql_user:
#     name={{ item.1 }}
#     append_privs=yes
#     priv={{ item.0.key }}.*:ALL
#     state=present
#   with_subelements:
#     - mysql.databases
#     - users


- name: Ensure user's grants to the databases
  shell:
    "echo '{{ item.1 }}' >> /tmp/toto ; echo '{{ item.0 }}.*:ALL' >> /tmp/toto"
  when:
    "{{ item.1 }} in {{ mysql.databases[item.0].users }} "
  with_nested:
    - [ "{% mysql.databases.keys() %}" ]
    - [ "{% mysql.users.keys() %}" ]
    # - [ "{% for key, val in mysql.databases.iteritems() %}{{ key }}{% if not loop.last %}, {% endif %}{% endfor %}" ]
    # - [ "{% for key, val in mysql.users.iteritems() %}{{ key }}{% if not loop.last %}, {% endif %}{% endfor %}" ]
    # - "{{ mysql.databases | keys }}"
    # "{{ mysql.users | keys }}"
    # - "{% set dbs = [] %}{% for key, val in mysql.databases.iteritems() %}{% dbs.append(key) %}}{% endfor %}{{ dbs | list }}"
    # - "{% set users = [] %}{% for key, val in mysql.users.iteritems() %}{% users.append(key) %}}{% endfor %}{{ users | list }}"

- name: Ensure user's grants to the databases
  mysql_user:
    name={{ item.1 }}
    append_privs=yes
    priv={{ item }}.*:ALL
    state=present
  with_items:
    item.users
  with_dict:
    mysql.databases
