;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by devo.ps ;
;;;;;;;;;;;;;;;;;;;;;;;;
; 
; The original file is available for reference at php.ini.orig

{# Define default variables if undefined #}
{% set php = {} if php is undefined %}
{% set cgi = php.cgi|default({}) %}
{% set session = php.session|default({}) %}

[PHP]

; Enable the PHP scripting language engine under Apache.
engine = On

; This directive determines whether or not PHP will recognize code between
; <? and ?> tags as PHP source which should be processed as such.
short_open_tag = On

; Allow ASP-style <% %> tags.
asp_tags = Off

; The number of significant digits displayed in floating point numbers.
precision = 14

; Enforce year 2000 compliance (will cause problems with non-compliant browsers)
y2k_compliance = On

; Output buffering is a mechanism for controlling how much output data
; (excluding headers and cookies) PHP should keep internally before pushing that
; data to the client.
output_buffering = 4096

; Transparent output compression using the zlib library
zlib.output_compression = Off

; Implicit flush tells PHP to tell the output layer to flush itself
; automatically after every output block.
; Note: This directive is hardcoded to On for the CLI SAPI
implicit_flush = Off

; The unserialize callback function will be called (with the undefined class'
; name as parameter), if the unserializer finds an undefined class
; which should be instantiated.
unserialize_callback_func =

; When floats & doubles are serialized store serialize_precision significant
; digits after the floating point.
serialize_precision = 100

; This directive allows you to enable and disable warnings which PHP will issue
; if you pass a value by reference at function call time.
allow_call_time_pass_reference = Off

; Safe Mode
safe_mode = {{ php.safe_mode | default('Off') }}

; By default, Safe Mode does a UID compare check when
; opening files.
safe_mode_gid = {{ php.safe_mode_gid | default('Off') }}

; When safe_mode is on, UID/GID checks are bypassed when
; including files from this directory and its subdirectories.
safe_mode_include_dir =

; When safe_mode is on, only executables located in the safe_mode_exec_dir
; will be allowed to be executed via the exec family of functions.
safe_mode_exec_dir =

; Setting certain environment variables may be a potential security breach.
; This directive contains a comma-delimited list of prefixes.
safe_mode_allowed_env_vars = PHP_

; This directive contains a comma-delimited list of environment variables that
; the end user won't be able to change using putenv().
safe_mode_protected_env_vars = LD_LIBRARY_PATH

; This directive allows you to disable certain functions for security reasons.
disable_functions =

; This directive allows you to disable certain classes for security reasons.
disable_classes =

; Determines the size of the realpath cache to be used by PHP.
realpath_cache_size = {{ php.realpath_cache_size | default('256k') }}

; Duration of time, in seconds for which to cache realpath information for a given
; file or directory.
realpath_cache_ttl = {{ php.realpath_cache_ttl | default('3600') }}

;;;;;;;;;;;;;;;;;
; Miscellaneous ;
;;;;;;;;;;;;;;;;;

; Decides whether PHP may expose the fact that it is installed on the server.
expose_php = {{ php.expose_php | default('Off') }}

;;;;;;;;;;;;;;;;;;;
; Resource Limits ;
;;;;;;;;;;;;;;;;;;;

; Maximum execution time of each script, in seconds.
; Note: This directive is hardcoded to 0 for the CLI SAPI
max_execution_time = {{ php.max_execution_time | default('60') }}

; Maximum amount of time each script may spend parsing request data.
; Note: This directive is hardcoded to -1 for the CLI SAPI
max_input_time = {{ php.max_input_time | default('120') }}

; Maximum amount of memory a script may consume (128MB)
memory_limit = {{ php.memory_limit | default('128M') }}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Error handling and logging ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; This directive informs PHP of which errors, warnings and notices you would like
; it to take action for.
error_reporting = {{ php.error_reporting | default('"E_ALL & ~E_DEPRECATED"') }}

; This directive controls whether or not and where PHP will output errors,
; notices and warnings too.
display_errors = {{ php.display_errors | default('Off') }}

; The display of errors which occur during PHP's startup sequence are handled
; separately from display_errors.
display_startup_errors = Off

; Besides displaying errors, PHP can also log errors to locations such as a
; server-specific log, STDERR, or a location specified by the error_log
; directive found below.
log_errors = {{ php.log_errors | default('On') }}

; Set maximum length of log_errors.
log_errors_max_len = 1024

; Do not log repeated messages.
ignore_repeated_errors = Off

; Ignore source of message when ignoring repeated messages.
ignore_repeated_source = Off

; If this parameter is set to Off, then memory leaks will not be shown.
report_memleaks = On

; Store the last error/warning message in $php_errormsg (boolean).
track_errors = Off

; When PHP displays or logs an error, it has the capability of inserting html
; links to documentation related to that error.
html_errors = Off

; Log errors to specified file.
error_log = {{ php.error_log | default('syslog') }}

;;;;;;;;;;;;;;;;;
; Data Handling ;
;;;;;;;;;;;;;;;;;

; This directive determines which super global arrays are registered when PHP
; starts up.
variables_order = "GPCS"

; This directive determines which super global data (G,P,C,E & S) should
; be registered into the super global array REQUEST.
request_order = "GP"

; Whether or not to register the EGPCS variables as global variables.
register_globals = Off

; Determines whether the deprecated long $HTTP_*_VARS type predefined variables
; are registered by PHP or not.
register_long_arrays = Off

; This directive determines whether PHP registers $argv & $argc each time it
; runs.
register_argc_argv = Off

; When enabled, the SERVER and ENV variables are created when they're first
; used (Just In Time) instead of when the script starts.
auto_globals_jit = On

; Maximum size of POST data that PHP will accept.
post_max_size = {{ php.post_max_size | default('16M') }}

; Magic quotes are a preprocessing feature of PHP where PHP will attempt to
; escape any character sequences in GET, POST, COOKIE and ENV data which might
; otherwise corrupt data being placed in resources such as databases before
; making that data available to you.
magic_quotes_gpc = Off

; Magic quotes for runtime-generated data, e.g. data from SQL, from exec(), etc.
magic_quotes_runtime = Off

; Use Sybase-style magic quotes (escape ' with '' instead of \').
magic_quotes_sybase = Off

; Automatically add files before PHP document.
auto_prepend_file =

; Automatically add files after PHP document.
auto_append_file =

; By default, PHP will output a character encoding using
; the Content-type: header.
default_mimetype = "text/html"

;;;;;;;;;;;;;;;;;;;;;;;;;
; Paths and Directories ;
;;;;;;;;;;;;;;;;;;;;;;;;;

; The root of the PHP pages, used only if nonempty.
doc_root =

; The directory under which PHP opens the script using /~username used only
; if nonempty.
user_dir =

; Whether or not to enable the dl() function.
enable_dl = Off

; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.
cgi.fix_pathinfo={{ cgi.fix_pathinfo | default('1') }}

;;;;;;;;;;;;;;;;
; File Uploads ;
;;;;;;;;;;;;;;;;

; Whether to allow HTTP file uploads.
file_uploads = On

; Maximum allowed size for uploaded files.
upload_max_filesize = {{ php.upload_max_filesize | default('16M') }}

; Maximum number of files that can be uploaded via a single request
max_file_uploads = 20

;;;;;;;;;;;;;;;;;;
; Fopen wrappers ;
;;;;;;;;;;;;;;;;;;

; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
allow_url_fopen = On

; Whether to allow include/require to open URLs (like http:// or ftp://) as files.
allow_url_include = Off

; Default timeout for socket based streams (seconds)
default_socket_timeout = 60

;;;;;;;;;;;;;;;;;;;
; Module Settings ;
;;;;;;;;;;;;;;;;;;;

[Date]

[filter]

[iconv]

[intl]

[sqlite]

[sqlite3]

[Pcre]

[Pdo]

[Pdo_mysql]
; If mysqlnd is used: Number of cache slots for the internal result set cache
pdo_mysql.cache_size = 2000

; Default socket name for local MySQL connects.  If empty, uses the built-in
pdo_mysql.default_socket =

[Phar]

[Syslog]
; Whether or not to define the various syslog variables (e.g. $LOG_PID,
; $LOG_CRON, etc.).
define_syslog_variables = Off

[mail function]
; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename
mail.add_x_header = On

[SQL]
sql.safe_mode = Off

[ODBC]
; Allow or prevent persistent links.
odbc.allow_persistent = On

; Check that a connection is still valid before reuse.
odbc.check_persistent = On

; Maximum number of persistent links.  -1 means no limit.
odbc.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
odbc.max_links = -1

; Handling of LONG fields.  Returns number of bytes to variables.  0 means
odbc.defaultlrl = 4096

; Handling of binary data.
odbc.defaultbinmode = 1

[MySQL]
; Allow accessing, from PHP's perspective, local files with LOAD DATA statements
mysql.allow_local_infile = On

; Allow or prevent persistent links.
mysql.allow_persistent = On

; If mysqlnd is used: Number of cache slots for the internal result set cache
mysql.cache_size = 2000

; Maximum number of persistent links.  -1 means no limit.
mysql.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
mysql.max_links = -1

; Default port number for mysql_connect().
mysql.default_port =

; Default socket name for local MySQL connects.
mysql.default_socket =

; Default host for mysql_connect() (doesn't apply in safe mode).
mysql.default_host =

; Default user for mysql_connect() (doesn't apply in safe mode).
mysql.default_user =

; Default password for mysql_connect() (doesn't apply in safe mode).
mysql.default_password =

; Maximum time (in seconds) for connect timeout. -1 means no limit
mysql.connect_timeout = 60

; Trace mode.
mysql.trace_mode = Off

[MySQLi]
; Maximum number of persistent links.  -1 means no limit.
mysqli.max_persistent = -1

; Allow or prevent persistent links.
mysqli.allow_persistent = On

; Maximum number of links.  -1 means no limit.
mysqli.max_links = -1

; If mysqlnd is used: Number of cache slots for the internal result set cache
mysqli.cache_size = 2000

; Default port number for mysqli_connect().
mysqli.default_port = 3306

; Default socket name for local MySQL connects.
mysqli.default_socket =

; Default host for mysql_connect() (doesn't apply in safe mode).
mysqli.default_host =

; Default user for mysql_connect() (doesn't apply in safe mode).
mysqli.default_user =

; Default password for mysqli_connect() (doesn't apply in safe mode).
mysqli.default_pw =

; Allow or prevent reconnect
mysqli.reconnect = Off

[mysqlnd]
; Enable / Disable collection of general statistics.
mysqlnd.collect_statistics = On

; Enable / Disable collection of memory usage statistics.
mysqlnd.collect_memory_statistics = Off

[PostgresSQL]
; Allow or prevent persistent links.
pgsql.allow_persistent = On

; Detect broken persistent links always with pg_pconnect().
pgsql.auto_reset_persistent = Off

; Maximum number of persistent links.  -1 means no limit.
pgsql.max_persistent = -1

; Maximum number of links (persistent+non persistent).  -1 means no limit.
pgsql.max_links = -1

; Ignore PostgreSQL backends Notice message or not.
pgsql.ignore_notice = 0

; Log PostgreSQL backends Noitce message or not.
pgsql.log_notice = 0

[bcmath]
; Number of decimal digits for all bcmath functions.
bcmath.scale = 0

[Session]
; Handler used to store/retrieve data.
session.save_handler = {{ session.save_handler | default('files') }}

; Argument passed to save_handler.
session.save_path = {{ session.save_path | default('/var/lib/php/session') }}

; Whether to use cookies.
session.use_cookies = 1

; This option forces PHP to fetch and use a cookie for storing and maintaining
; the session id.
session.use_only_cookies = 1

; Name of the session (used as cookie name).
session.name = PHPSESSID

; Initialize session on request startup.
session.auto_start = 0

; Lifetime in seconds of cookie or, if 0, until browser is restarted.
session.cookie_lifetime = 0

; The path for which the cookie is valid.
session.cookie_path = /

; The domain for which the cookie is valid.
session.cookie_domain =

; Whether or not to add the httpOnly flag to the cookie, which makes it inaccessible to browser scripting languages such as JavaScript.
session.cookie_httponly =

; Handler used to serialize data.
session.serialize_handler = php

; Defines the probability that the 'garbage collection' process is started
; on every session initialization.
session.gc_probability = 1

; Defines the probability that the 'garbage collection' process is started on every
; session initialization.
session.gc_divisor = 1000

; After this number of seconds, stored data will be seen as 'garbage' and
; cleaned up by the garbage collection process.
session.gc_maxlifetime = 1440

; PHP 4.2 and less have an undocumented feature/bug that allows you to
; to initialize a session variable in the global scope, even when register_globals
; is disabled.  PHP 4.3 and later will warn you, if this feature is used.
; You can disable the feature and the warning separately. At this time,
; the warning is only displayed, if bug_compat_42 is enabled.
session.bug_compat_42 = Off

; This setting controls whether or not you are warned by PHP when initializing a
; session value into the global space.
session.bug_compat_warn = Off

; Check HTTP Referer to invalidate externally stored URLs containing ids.
session.referer_check =

; How many bytes to read from the file.
session.entropy_length = 0

; Specified here to create the session id.
session.entropy_file =

; Set to {nocache,private,public,} to determine HTTP caching aspects
session.cache_limiter = nocache

; Document expires after n minutes.
session.cache_expire = 180

; trans sid support is disabled by default.
session.use_trans_sid = 0

; Select a hash function for use in generating session ids.
session.hash_function = 0

; Define how many bits are stored in each character when converting
; the binary hash data to something readable.
session.hash_bits_per_character = 5

; The URL rewriter will look for URLs in a defined set of HTML tags.
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=fakeentry"

[mbstring]

[gd]

[exif]

[Tidy]
; Should tidy clean and repair output automatically?
tidy.clean_output = Off

[soap]
; Enables or disables WSDL caching feature.
soap.wsdl_cache_enabled = 1

; Sets the directory name where SOAP extension will put cache files.
soap.wsdl_cache_dir = "/tmp"

; (time to live) Sets the number of second while cached file will be used
; instead of original one.
soap.wsdl_cache_ttl = 86400

; Sets the size of the cache limit. (Max. number of WSDL files to cache)
soap.wsdl_cache_limit = 5

[sysvshm]

[ldap]
; Sets the maximum number of open links or -1 for unlimited.
ldap.max_links = -1

[mcrypt]

[dba]
