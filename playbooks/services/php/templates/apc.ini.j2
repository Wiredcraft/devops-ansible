;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by devo.ps ;
;;;;;;;;;;;;;;;;;;;;;;;;
; 
; The original file is available for reference at apc.ini.orig

{# Define default variables if undefined #}
{% set php = php | default({}) %}
{% set apc = php.apc | default({}) %}

;[APC]
; Enable apc extension module
extension = apc.so

; Options for the apc module
; This can be set to 0 to disable APC. 
apc.enabled = {{ apc.enabled | default('1') }}

; Setting this enables APC for the CLI version of PHP (Mostly for testing and debugging).
apc.enable_cli = {{ apc.enable_cli | default('0') }}

; The number of shared memory segments to allocate for the compiler cache. 
apc.shm_segments = {{ apc.shm_segments | default('1') }}

; The size of each shared memory segment in MB. (add unit)
apc.shm_size = {{ apc.shm_size | default('128M') }}

; A "hint" about the number of distinct source files that will be included or 
; requested on your web server. Set to zero or omit if you're not sure;
apc.num_files_hint = 2048

; Just like num_files_hint, a "hint" about the number of distinct user cache
; variables to store.  Set to zero or omit if you're not sure;
apc.user_entries_hint = 4096

; The number of seconds a cache entry is allowed to idle in a slot in case this
; cache entry slot is needed by another entry.
apc.ttl = {{ apc.ttl | default('14400') }}

; The number of seconds a user cache entry is allowed to idle in a slot in case
; this cache entry slot is needed by another entry.
apc.user_ttl = {{ apc.user_ttl | default('7200') }}

; The number of seconds that a cache entry may remain on the garbage-collection list. 
apc.gc_ttl = {{ apc.gc_ttl | default('3600') }}

; On by default, but can be set to off and used in conjunction with positive
; apc.filters so that files are only cached if matched by a positive filter.
apc.cache_by_default = 1

; A comma-separated list of POSIX extended regular expressions.
apc.filters

; The mktemp-style file_mask to pass to the mmap module 
apc.mmap_file_mask = /tmp/apc.XXXXXX

; This file_update_protection setting puts a delay on caching brand new files.
apc.file_update_protection = 2

; Prevents large files from being cached
apc.max_file_size = {{ apc.max_file_size | default('1M') }}

; Whether to stat the main script file and the fullpath includes.
apc.stat = 1
apc.stat_ctime = 0

; With write_lock enabled, only one process at a time will try to compile an 
; uncached script while the other processes will run uncached
apc.write_lock = 1

; Logs any scripts that were automatically excluded from being cached due to early/late binding issues.
apc.report_autofilter = 0

; Optimize include_once and require_once calls and avoid the expensive system calls used.
apc.include_once_override = 0

; RFC1867 File Upload Progress hook handler
apc.rfc1867 = 0
apc.rfc1867_prefix = upload_
apc.rfc1867_name = APC_UPLOAD_PROGRESS
apc.rfc1867_freq = 0

; not documented
apc.coredump_unmap = 0