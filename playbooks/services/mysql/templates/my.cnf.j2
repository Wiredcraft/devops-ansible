#
# Generated by Ansible for {{ ansible_hostname }}
#
{# Define default variables if undefined #}
{% set mysql = {} if mysql is undefined %}
{% set tunable = mysql.tunable|default({}) %}
# Local modifications will be overwritten.
#
# The MySQL database server configuration file.
#
# You can copy this to one of:
# - "/etc/mysql/my.cnf" to set global options,
# - "~/.my.cnf" to set user-specific options.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.
[client]
port            = {{ mysql.port }}
socket          = {{ mysql.socket }}

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

# This was formally known as [safe_mysqld]. Both versions are currently parsed.
[mysqld_safe]
socket          = {{ mysql.socket }}
nice            = 0

[mysqld]
#
# * Basic Settings
#

#
# * IMPORTANT
#   If you make changes to these settings and your system uses apparmor, you may
#   also need to also adjust /etc/apparmor.d/usr.sbin.mysqld.
#

user            = mysql
pid-file        = {{ mysql.pid_file }}
socket          = {{ mysql.socket }}
port            = {{ mysql.port }}
basedir         = {{ mysql.base_dir }}
datadir         = {{ mysql.data_dir }}
tmpdir          = /tmp
skip-external-locking
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address            = {{ mysql.bind_address }}
#
# * Fine Tuning
#
key_buffer              = {{ tunable.key_buffer }}
max_allowed_packet      = {{ tunable.max_allowed_packet }}
thread_stack            = {{ tunable.thread_stack }}
thread_cache_size       = {{ tunable.thread_cache_size }}

auto-increment-increment = {{ mysql.auto_increment_increment }}
auto-increment-offset    = {{ mysql.auto_increment_offset }}

# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
myisam-recover          = BACKUP
#max_connections        = 100
#table_cache            = 64
#thread_concurrency     = 10
max_connections         = {{ tunable.max_connections }}
wait_timeout            = {{ tunable.wait_timeout }}
net_read_timeout        = {{ tunable.net_read_timeout }}
net_write_timeout       = {{ tunable.net_write_timeout }}
back_log                = {{ tunable.back_log }}
table_cache             = {{ tunable.table_cache }}
max_heap_table_size     = {{ tunable.max_heap_table_size }}

#
# * Query Cache Configuration
#
query_cache_limit       = {{ tunable.query_cache_limit }}
query_cache_size        = {{ tunable.query_cache_size }}
#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
#log            = /var/log/mysql/mysql.log
#
# Error logging goes to syslog. This is a Debian improvement :)
{%- if tunable.log_error -%}
log-error = {{ tunable.log_error }}
{%- endif -%}
#
# Here you can see queries with especially long duration
log_slow_queries        = {{ tunable.log_slow_queries }}
long_query_time         = {{ tunable.long_query_time }}
{%- if tunable.log_queries_not_using_index -%}
log-queries-not-using-indexes
{%- endif -%}
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
#server-id              = 1
{%- if tunable.log_bin -%}
log_bin = {{ tunable.log_bin }}
log_slave_updates       = {{ tunable.log_slave_updates }}
{%- endif -%}
{%- if tunable.log_bin_trust_function_creators -%}
log_bin_trust_function_creators
{%- endif -%}
expire_logs_days        = {{ tunable.expire_logs_days }}
max_binlog_size         = {{ tunable.max_binlog_size }}
#binlog_do_db           = include_database_name
#binlog_ignore_db       = include_database_name
{%- if tunable.relay_log -%}
relay-log               = {{ tunable.relay_log }}
{%- endif -%}
sync_binlog             = {{ tunable.sync_binlog }}
{%- if tunable.skip_slave_start -%}
skip_slave_start
{%- endif -%}

#
# * InnoDB
#
# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!
# You might want to disable InnoDB to shrink the mysqld process by circa 100MB.
#skip-innodb
innodb_buffer_pool_size = {{ tunable.innodb_buffer_pool_size }}
innodb_log_file_size    = {{ tunable.innodb_log_file_size }}
innodb_additional_mem_pool_size = {{ tunable.innodb_additional_mem_pool_size }}
innodb_data_file_path   = {{ tunable.innodb_data_file_path }}
innodb_file_per_table
innodb_flush_log_at_trx_commit = {{ tunable.innodb_flush_log_at_trx_commit }}
{%- if tunable.innodb_flush_method -%}
innodb_flush_method     = {{ tunable.innodb_flush_method }}
{%- endif -%}
innodb_log_buffer_size  = {{ tunable.innodb_log_buffer_size }}
{%- if tunable.innodb_adaptive_flushing -%}
innodb_adaptive_flushing  = {{ tunable.innodb_adaptive_flushing }}
{%- endif -%}

{% if skip_federated %}
#
# * Federated
#
# The FEDERATED storage engine is disabled since 5.0.67 by default in the .cnf files
# shipped with MySQL distributions (my-huge.cnf, my-medium.cnf, and so forth).
#
skip-federated
{% endif %}
#
# * Security Features
#
# Read the manual, too, if you want chroot!
# chroot = /var/lib/mysql/
#
# For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
#
# ssl-ca=/etc/mysql/cacert.pem
# ssl-cert=/etc/mysql/server-cert.pem
# ssl-key=/etc/mysql/server-key.pem

[mysqldump]
quick
quote-names
max_allowed_packet      = {{ tunable.max_allowed_packet }}

[mysql]
#no-auto-rehash # faster start of mysql but no tab completition

[isamchk]
key_buffer              = {{ tunable.max_allowed_packet }}

#
# * NDB Cluster
#
# See /usr/share/doc/mysql-server-*/README.Debian for more information.
#
# The following configuration is read by the NDB Data Nodes (ndbd processes)
# not from the NDB Management Nodes (ndb_mgmd processes).
#
# [MYSQL_CLUSTER]
# ndb-connectstring=127.0.0.1

old_passwords           = {{ mysql.old_passwords }}